.version sol 0.66.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc modifiers/modifiers.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro init
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 33
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $init_e1c7392a_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	init_e1c7392a_internal
.type	init_e1c7392a_internal, @function
CALL $init_e1c7392a_internal_macro$

.macro init_e1c7392a_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 34
PUSHINT 0
NEWDICT
PAIR
SETGLOB 15
.loc marketmaker.sol, 35
PUSHINT 0
NEWDICT
PAIR
SETGLOB 16
.loc marketmaker.sol, 36
PUSHINT 2
.loc marketmaker.sol, 37
GETGLOB 15
PUSHINT 1
NEWC
STU 128
SWAP
UNPAIR
OVER
INC
ROLLREV 3
PUSHINT 32
DICTUSETB
PAIR
DUP
SETGLOB 15
.loc marketmaker.sol, 38
PUSHINT 1
NEWC
STU 128
SWAP
UNPAIR
OVER
INC
ROLLREV 3
PUSHINT 32
DICTUSETB
PAIR
SETGLOB 15
.loc marketmaker.sol, 39
GETGLOB 16
PUSHINT 1
NEWC
STU 128
SWAP
UNPAIR
OVER
INC
ROLLREV 3
PUSHINT 32
DICTUSETB
PAIR
DUP
SETGLOB 16
.loc marketmaker.sol, 40
PUSHINT 2
NEWC
STU 128
SWAP
UNPAIR
OVER
INC
ROLLREV 3
PUSHINT 32
DICTUSETB
PAIR
SETGLOB 16
.loc marketmaker.sol, 41
PUSHINT 2
PUSHCONT {
	DUP
	LESSINT 20
}
PUSHCONT {
	.loc marketmaker.sol, 42
	GETGLOB 15
	OVER
	DEC
	UFITS 128
	GETGLOB 15
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 128
	PUSH S2
	ADDCONST -2
	UFITS 128
	GETGLOB 15
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 128
	ADD
	UFITS 128
	NEWC
	STU 128
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSETB
	PAIR
	SETGLOB 15
	.loc marketmaker.sol, 43
	DUP
	GETGLOB 15
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 128
	PUSH S2
	ADD
	UFITS 128
	POP S2
	.loc marketmaker.sol, 44
	GETGLOB 16
	PUSH S2
	NEWC
	STU 128
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSETB
	PAIR
	SETGLOB 16
	.loc marketmaker.sol, 41
	INC
	UFITS 128
	.loc marketmaker.sol, 0
}
WHILE
DROP2
.loc marketmaker.sol, 0

.globl	_innerPrice_f88151c7_internal
.type	_innerPrice_f88151c7_internal, @function
CALL $_innerPrice_f88151c7_internal_macro$

.macro _innerPrice_f88151c7_internal_macro
.loc marketmaker.sol, 49
PUSHINT 0
GETGLOB 20
SECOND
PUSHINT 32
DICTUGET
THROWIFNOT 50
CALLREF {
	LDMSGADDR
	LDU 128
	LDU 8
	ENDS
	TRIPLE
}
SECOND
GETGLOB 19
MUL
UFITS 128
PUSHINT 1
GETGLOB 20
SECOND
PUSHINT 32
DICTUGET
THROWIFNOT 50
CALLREF {
	LDMSGADDR
	LDU 128
	LDU 8
	ENDS
	TRIPLE
}
SECOND
DIV
.loc marketmaker.sol, 0

.macro setFlexClient
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 52
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $setFlexClient_d247e7dd_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	setFlexClient_d247e7dd_internal
.type	setFlexClient_d247e7dd_internal, @function
CALL $setFlexClient_d247e7dd_internal_macro$

.macro setFlexClient_d247e7dd_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 53
SETGLOB 10
.loc marketmaker.sol, 0

.globl	getLendSellAmount_24f0c148_internal
.type	getLendSellAmount_24f0c148_internal, @function
CALL $getLendSellAmount_24f0c148_internal_macro$

.macro getLendSellAmount_24f0c148_internal_macro
.loc marketmaker.sol, 57
XCHG S2
.loc marketmaker.sol, 58
EQINT 1
PUSHCONT {
	.loc marketmaker.sol, 58
	OVER
	MUL
	UFITS 128
	GETGLOB 19
	DIV
	INC
	UFITS 128
	.loc marketmaker.sol, 0
}
IF
.loc marketmaker.sol, 59
PUSHINT 10015
MUL
UFITS 128
PUSHINT 10000
DIV
INC
UFITS 128
NIP
.loc marketmaker.sol, 0

.globl	preparePriceXchg_49c313eb_internal
.type	preparePriceXchg_49c313eb_internal, @function
CALL $preparePriceXchg_49c313eb_internal_macro$

.macro preparePriceXchg_49c313eb_internal_macro
.loc marketmaker.sol, 63
CALLREF {
	CALL $preparePriceXchgData_326ef661_internal_macro$
}
GETGLOB 11
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc marketmaker.sol, 64
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
.loc marketmaker.sol, 0

.globl	preparePriceXchgData_326ef661_internal
.type	preparePriceXchgData_326ef661_internal, @function
CALL $preparePriceXchgData_326ef661_internal_macro$

.macro preparePriceXchgData_326ef661_internal_macro
.loc marketmaker.sol, 68
NEWDICT
.loc marketmaker.sol, 69
SWAP
PUSHINT 0
BLKPUSH 2, 0
PUSH S4
PUSHINT 0
ROLL 6
TUPLE 7
.loc marketmaker.sol, 71
NEWC
SWAP
UNTUPLE 7
REVERSE 8, 0
STU 128
STU 128
STU 128
STU 32
STDICT
STU 32
STDICT
.loc marketmaker.sol, 72
ENDC
.loc marketmaker.sol, 0

.macro setWallet
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 75
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDU 8
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $setWallet_fd3c54db_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	setWallet_fd3c54db_internal
.type	setWallet_fd3c54db_internal, @function
CALL $setWallet_fd3c54db_internal_macro$

.macro setWallet_fd3c54db_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 77
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
PUSHINT 0
DUP
TRIPLE
ROLL 3
SETINDEX 0
.loc marketmaker.sol, 78
ROT
SETINDEX 1
.loc marketmaker.sol, 79
SWAP
SETINDEX 2
.loc marketmaker.sol, 80
GETGLOB 20
SWAP
CALLREF {
	UNTRIPLE
	XCHG S2
	NEWC
	STSLICE
	STU 128
	STU 8
}
SWAP
UNPAIR
OVER
INC
ROLLREV 3
PUSHINT 32
DICTUSETB
PAIR
SETGLOB 20
.loc marketmaker.sol, 0

.macro clearWallet
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 83
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $clearWallet_347b1df1_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	clearWallet_347b1df1_internal
.type	clearWallet_347b1df1_internal, @function
CALL $clearWallet_347b1df1_internal_macro$

.macro clearWallet_347b1df1_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 84
PUSHINT 0
NEWDICT
PAIR
SETGLOB 20
.loc marketmaker.sol, 0

.macro bindWallets
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 87
OVER
PUSHCONT {
	LDI 1
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLSWAPIFNOT
	PUSHCONT {
		LDMSGADDR
		LDU 256
		ROTREV
		PAIR
	}
	IF
	SWAP
	LDI 1
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDU 256
	}
	IF
}
PUSHCONT {
	LDI 1
	LDI 1
	SWAP
	NULLSWAPIFNOT
	PUSHCONT {
		LDMSGADDR
		LDU 256
		ROTREV
		PAIR
	}
	IF
	SWAP
	LDI 1
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDU 256
	}
	IF
}
IFELSE
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $bindWallets_1bb6e177_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	bindWallets_1bb6e177_internal
.type	bindWallets_1bb6e177_internal, @function
CALL $bindWallets_1bb6e177_internal_macro$

.macro bindWallets_1bb6e177_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 93
PUSH3 S0, S1, S2
PUSH S6
PUSHINT 0
GETGLOB 20
SECOND
PUSHINT 32
DICTUGET
THROWIFNOT 50
CALLREF {
	LDMSGADDR
	LDU 128
	LDU 8
	ENDS
	TRIPLE
}
FIRST
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2949852426645541256083542794369173188247553
STUR 143
ROLLREV 4
NEWC
STSLICECONST x00000013
STI 1
XCPU S1, S0
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	SWAP
	UNPAIR
	XCHG S2
	STSLICE
	STU 256
}
IFELSE
STI 1
NEWC
ROT
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc marketmaker.sol, 94
REVERSE 4, 0
PUSHINT 1
GETGLOB 20
SECOND
PUSHINT 32
DICTUGET
THROWIFNOT 50
CALLREF {
	LDMSGADDR
	LDU 128
	LDU 8
	ENDS
	TRIPLE
}
FIRST
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2949852426645541256083542794369173188247553
STUR 143
ROLLREV 4
NEWC
STSLICECONST x00000013
STI 1
XCPU S1, S0
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	SWAP
	UNPAIR
	XCHG S2
	STSLICE
	STU 256
}
IFELSE
STI 1
NEWC
ROT
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc marketmaker.sol, 0

.macro makeOrders
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 97
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $makeOrders_f1b71576_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	makeOrders_f1b71576_internal
.type	makeOrders_f1b71576_internal, @function
CALL $makeOrders_f1b71576_internal_macro$

.macro makeOrders_f1b71576_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 98
GETGLOB 13
PUSHCONT {
	DUP
	GTINT 0
}
PUSHCONT {
	.loc marketmaker.sol, 99
	CALLREF {
		CALL $_innerPrice_f88151c7_internal_macro$
	}
	GETGLOB 14
	PUSH S2
	MUL
	UFITS 128
	ADD
	UFITS 128
	.loc marketmaker.sol, 100
	OVER
	DEC
	UFITS 128
	GETGLOB 15
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 128
	PUSHINT 0
	GETGLOB 20
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		LDMSGADDR
		LDU 128
		LDU 8
		ENDS
		TRIPLE
	}
	SECOND
	MUL
	UFITS 128
	PUSHINT 10
	DIV
	.loc marketmaker.sol, 101
	GETGLOB 13
	DEC
	UFITS 128
	GETGLOB 16
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 128
	DIV
	.loc marketmaker.sol, 102
	PUSHINT 0
	PUSH S2
	PAIR
	SWAP
	CALLREF {
		CALL $_deployOrder_3f6f8352_internal_macro$
	}
	.loc marketmaker.sol, 103
	GETGLOB 17
	PUSHINT 0
	ROT
	PAIR
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STU 128
		STU 128
	}
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSETB
	PAIR
	SETGLOB 17
	.loc marketmaker.sol, 98
	DEC
	UFITS 128
	.loc marketmaker.sol, 0
}
WHILE
DROP
.loc marketmaker.sol, 105
GETGLOB 13
PUSHCONT {
	DUP
	GTINT 0
}
PUSHCONT {
	PUSHCONT {
		.loc marketmaker.sol, 106
		CALLREF {
			CALL $_innerPrice_f88151c7_internal_macro$
		}
		FITS 128
		GETGLOB 14
		FITS 128
		PUSH S2
		FITS 128
		MUL
		FITS 128
		SUB
		FITS 128
		.loc marketmaker.sol, 107
		DUP
		LESSINT 0
		PUSHCONT {
			.loc marketmaker.sol, 108
			DROP
			.loc marketmaker.sol, 0
		}
		IFJMP
		.loc marketmaker.sol, 110
		UFITS 128
		.loc marketmaker.sol, 111
		OVER
		DEC
		UFITS 128
		GETGLOB 15
		SECOND
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		PLDU 128
		PUSHINT 1
		GETGLOB 20
		SECOND
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		CALLREF {
			LDMSGADDR
			LDU 128
			LDU 8
			ENDS
			TRIPLE
		}
		SECOND
		MUL
		UFITS 128
		PUSHINT 10
		DIV
		.loc marketmaker.sol, 112
		GETGLOB 13
		DEC
		UFITS 128
		GETGLOB 16
		SECOND
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		PLDU 128
		DIV
		.loc marketmaker.sol, 113
		GETGLOB 19
		MUL
		UFITS 128
		.loc marketmaker.sol, 114
		OVER
		DIV
		.loc marketmaker.sol, 115
		PUSHINT 1
		PUSH S2
		PAIR
		SWAP
		CALLREF {
			CALL $_deployOrder_3f6f8352_internal_macro$
		}
		.loc marketmaker.sol, 116
		GETGLOB 17
		PUSHINT 1
		ROT
		PAIR
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 128
			STU 128
		}
		SWAP
		UNPAIR
		OVER
		INC
		ROLLREV 3
		PUSHINT 32
		DICTUSETB
		PAIR
		SETGLOB 17
		.loc marketmaker.sol, 0
	}
	CALLX
	.loc marketmaker.sol, 105
	DEC
	UFITS 128
	.loc marketmaker.sol, 0
}
WHILE
DROP
.loc marketmaker.sol, 0

.macro removeOrders
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 120
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $removeOrders_5c6849f2_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	removeOrders_5c6849f2_internal
.type	removeOrders_5c6849f2_internal, @function
CALL $removeOrders_5c6849f2_internal_macro$

.macro removeOrders_5c6849f2_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 121
PUSHINT 0
PUSHCONT {
	DUP
	GETGLOB 17
	FIRST
	FITS 128
	DEC
	FITS 128
	LEQ
}
PUSHCONT {
	.loc marketmaker.sol, 122
	DUP
	UFITS 128
	GETGLOB 17
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		LDU 128
		LDU 128
		ENDS
		PAIR
	}
	CALLREF {
		CALL $_cancelOrder_8fa90b7a_internal_macro$
	}
	.loc marketmaker.sol, 121
	INC
	FITS 128
	.loc marketmaker.sol, 0
}
WHILE
DROP
.loc marketmaker.sol, 124
PUSHINT 0
NEWDICT
PAIR
SETGLOB 17
.loc marketmaker.sol, 0

.macro deployOrder
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 128
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDU 128
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $deployOrder_fc8ec546_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	deployOrder_fc8ec546_internal
.type	deployOrder_fc8ec546_internal, @function
CALL $deployOrder_fc8ec546_internal_macro$

.macro deployOrder_fc8ec546_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 129
CALLREF {
	CALL $_deployOrder_3f6f8352_internal_macro$
}
.loc marketmaker.sol, 0

.globl	_deployOrder_3f6f8352_internal
.type	_deployOrder_3f6f8352_internal, @function
CALL $_deployOrder_3f6f8352_internal_macro$

.macro _deployOrder_3f6f8352_internal_macro
.loc marketmaker.sol, 136
NOW
PUSHINT 10
UFITS 32
MULCONST 60
UFITS 32
ADD
UFITS 32
.loc marketmaker.sol, 137
TRUE
BLKPUSH 2, 0
PUSH S4
MYADDR
GETGLOB 18
PUSHINT 0
TUPLE 7
.loc marketmaker.sol, 138
PUSH S3
FIRST
EQINT 1
PUSHCONT {
	.loc marketmaker.sol, 138
	FALSE
	TRUE
	PUSH2 S0, S4
	MYADDR
	GETGLOB 18
	PUSHINT 0
	TUPLE 7
	NIP
	.loc marketmaker.sol, 0
}
IF
.loc marketmaker.sol, 139
GETGLOB 11
GETGLOB 12
PUSH S5
SECOND
ROLL 4
PUSH S6
FIRST
ROLL 6
PUSH S7
SECOND
CALLREF {
	CALL $getLendSellAmount_24f0c148_internal_macro$
}
PUSHINT 3000000000
MYADDR
PUSHINT 0
ROLL 9
FIRST
GETGLOB 20
SECOND
PUSHINT 32
DICTUGET
THROWIFNOT 50
CALLREF {
	LDMSGADDR
	LDU 128
	LDU 8
	ENDS
	TRIPLE
}
FIRST
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 3436630257133181346258276825233557188247553
STUR 143
ROLLREV 9
NEWC
STSLICECONST x00000010
STU 32
XCPU S1, S0
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STSLICE
}
IFELSE
STU 128
STU 128
STU 32
ROLLREV 4
NEWC
STU 128
STREF
STREF
SWAP
UNTUPLE 7
REVERSE 8, 0
STI 1
STI 1
STI 1
STU 128
STSLICE
ROTREV
NEWC
STU 256
STU 256
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc marketmaker.sol, 0

.macro cancelOrder
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 142
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDU 128
ROTREV
PAIR
SWAP
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $cancelOrder_8bd0bcf1_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	cancelOrder_8bd0bcf1_internal
.type	cancelOrder_8bd0bcf1_internal, @function
CALL $cancelOrder_8bd0bcf1_internal_macro$

.macro cancelOrder_8bd0bcf1_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 145
CALLREF {
	CALL $_cancelOrder_8fa90b7a_internal_macro$
}
.loc marketmaker.sol, 0

.globl	_cancelOrder_8fa90b7a_internal
.type	_cancelOrder_8fa90b7a_internal, @function
CALL $_cancelOrder_8fa90b7a_internal_macro$

.macro _cancelOrder_8fa90b7a_internal_macro
.loc marketmaker.sol, 151
NULL
.loc marketmaker.sol, 152
TRUE
PUSH S2
SECOND
CALLREF {
	CALL $preparePriceXchg_49c313eb_internal_macro$
}
PUSHINT 2000000000
ROLL 4
FIRST
GETGLOB 20
SECOND
PUSHINT 32
DICTUGET
THROWIFNOT 50
CALLREF {
	LDMSGADDR
	LDU 128
	LDU 8
	ENDS
	TRIPLE
}
FIRST
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 3274370980303967982866698814945429188247553
STUR 143
ROLLREV 4
NEWC
STSLICECONST x00000011
STU 128
STSLICE
STI 1
XCPU S1, S0
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc marketmaker.sol, 0

.macro sendMoney
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 156
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDMSGADDR
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $sendMoney_2ff5f735_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	sendMoney_2ff5f735_internal
.type	sendMoney_2ff5f735_internal, @function
CALL $sendMoney_2ff5f735_internal_macro$

.macro sendMoney_2ff5f735_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 45
OVER
.loc modifiers/modifiers.sol, 64
GETPARAM 7
FIRST
SWAP
PUSHINT 1000000000
ADD
UFITS 128
GREATER
THROWIFNOT 203
.loc marketmaker.sol, 157
NEWC
STSLICECONST x42_
STSLICE
SWAP
STGRAMS
PUSHINT 107
STZEROES
ENDC
PUSHINT 3
SENDRAWMSG
.loc marketmaker.sol, 0

.macro setPriceCode
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 161
LDREF
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $setPriceCode_bbe9ccb6_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	setPriceCode_bbe9ccb6_internal
.type	setPriceCode_bbe9ccb6_internal, @function
CALL $setPriceCode_bbe9ccb6_internal_macro$

.macro setPriceCode_bbe9ccb6_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 162
SETGLOB 12
.loc marketmaker.sol, 0

.macro setPriceSaltCode
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 165
LDREF
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $setPriceSaltCode_acfae46d_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	setPriceSaltCode_acfae46d_internal
.type	setPriceSaltCode_acfae46d_internal, @function
CALL $setPriceSaltCode_acfae46d_internal_macro$

.macro setPriceSaltCode_acfae46d_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 166
SETGLOB 11
.loc marketmaker.sol, 0

.macro setUserId
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 169
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $setUserId_6c282993_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	setUserId_6c282993_internal
.type	setUserId_6c282993_internal, @function
CALL $setUserId_6c282993_internal_macro$

.macro setUserId_6c282993_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 170
SETGLOB 18
.loc marketmaker.sol, 0

.macro setPairDecimals
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 173
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $setPairDecimals_34d71841_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	setPairDecimals_34d71841_internal
.type	setPairDecimals_34d71841_internal, @function
CALL $setPairDecimals_34d71841_internal_macro$

.macro setPairDecimals_34d71841_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 174
SETGLOB 19
.loc marketmaker.sol, 0

.macro setConfig
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 177
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDU 128
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $setConfig_cb82eb58_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	setConfig_cb82eb58_internal
.type	setConfig_cb82eb58_internal, @function
CALL $setConfig_cb82eb58_internal_macro$

.macro setConfig_cb82eb58_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 178
SETGLOB 13
.loc marketmaker.sol, 179
SETGLOB 14
.loc marketmaker.sol, 0

.macro updateCode
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 183
LDREF
LDREF
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $updateCode_10aae4d5_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	updateCode_10aae4d5_internal
.type	updateCode_10aae4d5_internal, @function
CALL $updateCode_10aae4d5_internal_macro$

.macro updateCode_10aae4d5_internal_macro
.loc modifiers/modifiers.sol, 44
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 200
.loc modifiers/modifiers.sol, 49
ACCEPT
.loc marketmaker.sol, 184
OVER
SETCODE
.loc marketmaker.sol, 185
SWAP
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc marketmaker.sol, 186
PUSHINT $onCodeUpgrade_0e89a1b9_internal$
PUSH C3
EXECUTE
.loc marketmaker.sol, 0

.internal-alias onCodeUpgrade_0e89a1b9_internal, 2083461128
.internal onCodeUpgrade_0e89a1b9_internal
.loc marketmaker.sol, 190
DROP
.loc marketmaker.sol, 191
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 10
PUSHREF {
}
SETGLOB 11
PUSHREF {
}
SETGLOB 12
PUSHINT 0
SETGLOB 13
PUSHINT 0
SETGLOB 14
PUSHINT 0
NEWDICT
PAIR
SETGLOB 15
PUSHINT 0
NEWDICT
PAIR
SETGLOB 16
PUSHINT 0
NEWDICT
PAIR
SETGLOB 17
PUSHINT 0
SETGLOB 18
PUSHINT 0
SETGLOB 19
PUSHINT 0
NEWDICT
PAIR
SETGLOB 20
.loc marketmaker.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro getInit
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 194
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $getInit_96c13b0e_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 2, 1
	STSLICECONST x9ba61b3f
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP2
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	getInit_96c13b0e_internal
.type	getInit_96c13b0e_internal, @function
CALL $getInit_96c13b0e_internal_macro$

.macro getInit_96c13b0e_internal_macro
.loc marketmaker.sol, 195
GETGLOB 15
GETGLOB 16
.loc marketmaker.sol, 0

.macro getPriceAddr
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 198
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $getPriceAddr_ec946895_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x9ce00362
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	getPriceAddr_ec946895_internal
.type	getPriceAddr_ec946895_internal, @function
CALL $getPriceAddr_ec946895_internal_macro$

.macro getPriceAddr_ec946895_internal_macro
.loc marketmaker.sol, 199
CALLREF {
	CALL $preparePriceXchg_49c313eb_internal_macro$
}
.loc marketmaker.sol, 0

.macro getPriceData
DROP
GETGLOB 6
THROWIFNOT 76
.loc marketmaker.sol, 202
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $getPriceData_462b9a2d_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2641377344
	STUR 130
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	getPriceData_462b9a2d_internal
.type	getPriceData_462b9a2d_internal, @function
CALL $getPriceData_462b9a2d_internal_macro$

.macro getPriceData_462b9a2d_internal_macro
.loc marketmaker.sol, 203
CALLREF {
	CALL $preparePriceXchgData_326ef661_internal_macro$
}
.loc marketmaker.sol, 0

.macro getWallets
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 206
ENDS
.loc marketmaker.sol, 0
CALLREF {
	CALL $getWallets_db7a4605_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 4102026668
	STUR 130
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	getWallets_db7a4605_internal
.type	getWallets_db7a4605_internal, @function
CALL $getWallets_db7a4605_internal_macro$

.macro getWallets_db7a4605_internal_macro
.loc marketmaker.sol, 207
GETGLOB 20
.loc marketmaker.sol, 0

.macro receive_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro on_bounce_macro
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 0
DUP
IFREF {
	CALL $upd_only_time_in_c4$
}

.macro fallback_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc marketmaker.sol, 0
DUP
IFREF {
	CALL $upd_only_time_in_c4$
}

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDREF
LDREF
LDREF
ENDS
CTOS
LDU 128
LDU 128
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 256
LDU 128
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHREF {
	}
	DUP
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	BLKPUSH 2, 0
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 3
	SETGLOB 13
	PUSHINT 1000000
	SETGLOB 14
	PUSHINT 10000
	SETGLOB 19
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
STREF
STREF
ROLLREV 8
NEWC
STU 128
STU 128
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
STU 256
STU 128
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
PUSHCONT {
	DROP
	CALLREF {
		CALL $fallback_macro$
	}
	THROW 0
}
IFNOT
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX
	DUP
	MYADDR
	NEWC
	STSLICE
	STSLICE
	ENDC
	HASHCU
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.macro public_function_selector
DUP
PUSHINT 1756716863
LEQ
IFJMPREF {
	DUP
	PUSHINT 463870783
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 22475522
		EQUAL
		IFJMPREF {
			CALL $setWallet$
		}
		DUP
		PUSHINT 176078910
		EQUAL
		IFJMPREF {
			CALL $clearWallet$
		}
		DUP
		PUSHINT 352725591
		EQUAL
		IFJMPREF {
			CALL $sendMoney$
		}
		DUP
		PUSHINT 463870783
		EQUAL
		IFJMPREF {
			CALL $getInit$
		}
	}
	DUP
	PUSHINT 519071127
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 480962201
		EQUAL
		IFJMPREF {
			CALL $setFlexClient$
		}
		DUP
		PUSHINT 484442978
		EQUAL
		IFJMPREF {
			CALL $getPriceAddr$
		}
		DUP
		PUSHINT 493893696
		EQUAL
		IFJMPREF {
			CALL $getPriceData$
		}
		DUP
		PUSHINT 519071127
		EQUAL
		IFJMPREF {
			CALL $setPriceCode$
		}
	}
	DUP
	PUSHINT 975833324
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 639422336
		EQUAL
		IFJMPREF {
			CALL $removeOrders$
		}
		DUP
		PUSHINT 803291766
		EQUAL
		IFJMPREF {
			CALL $setPairDecimals$
		}
		DUP
		PUSHINT 805475044
		EQUAL
		IFJMPREF {
			CALL $init$
		}
		DUP
		PUSHINT 975833324
		EQUAL
		IFJMPREF {
			CALL $setConfig$
		}
	}
	DUP
	PUSHINT 1756716863
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1038408101
		EQUAL
		IFJMPREF {
			CALL $setPriceSaltCode$
		}
		DUP
		PUSHINT 1498911242
		EQUAL
		IFJMPREF {
			CALL $bindWallets$
		}
		DUP
		PUSHINT 1732020652
		EQUAL
		IFJMPREF {
			CALL $makeOrders$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
	}
}
DUP
PUSHINT 2136069134
LEQ
IFJMPREF {
	DUP
	PUSHINT 2095978802
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1835176432
		EQUAL
		IFJMPREF {
			CALL $setUserId$
		}
		DUP
		PUSHINT 1871649425
		EQUAL
		IFJMPREF {
			CALL $cancelOrder$
		}
		DUP
		PUSHINT 1954543020
		EQUAL
		IFJMPREF {
			CALL $getWallets$
		}
		DUP
		PUSHINT 2095978802
		EQUAL
		IFJMPREF {
			CALL $updateCode$
		}
	}
	DUP
	PUSHINT 2136069134
	EQUAL
	IFJMPREF {
		CALL $deployOrder$
	}
}

